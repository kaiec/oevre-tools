// Generated by CoffeeScript 1.7.1
(function() {
  var $, async, exec, queue, _exec,
    __hasProp = {}.hasOwnProperty;

  $ = require("jquery");

  exec = require("child_process").exec;

  module.exports.chooseDirectory = function(callback) {
    var chooser;
    $("body").append('<input style="display:none;" id="file1Dialog" type="file" nwdirectory />');
    chooser = $("#file1Dialog");
    chooser.change(function(evt) {
      callback($(this).val());
      return $(this).remove();
    });
    return chooser.trigger('click');
  };

  module.exports.chooseFile = function(callback) {
    var chooser;
    $("body").append('<input style="display:none;" id="file2Dialog" type="file" />');
    chooser = $("#file2Dialog");
    chooser.change(function(evt) {
      callback($(this).val());
      return $(this).remove();
    });
    return chooser.trigger('click');
  };

  module.exports.chooseFileSave = function(callback) {
    var chooser;
    $("body").append('<input style="display:none;" id="file3Dialog" type="file" nwsaveas />');
    chooser = $("#file3Dialog");
    chooser.change(function(evt) {
      callback($(this).val());
      return $(this).remove();
    });
    return chooser.trigger('click');
  };

  module.exports.printObject = function(object) {
    var key, result, value;
    result = "{ ";
    for (key in object) {
      if (!__hasProp.call(object, key)) continue;
      value = object[key];
      result += key;
      result += ": \"";
      result += value;
      result += "\"; ";
    }
    result += " }";
    return result;
  };

  module.exports.readExif = function(tag, file) {
    exec = require('child_process').exec;
    return exec("", function(err, str) {
      var obj;
      if (err) {
        return fn(err);
      }
      return obj = str.split('\n').reduce(function(obj, line) {
        var i, key, val;
        i = line.indexOf(':');
        key = slug(line.slice(0, i));
        val = line.slice(i + 1, line.length).trim();
        if ('' === key || '' === val) {
          return obj;
        }
        obj[key] = val;
        return obj;
      });
    });
  };

  _exec = function(command, callback) {
    return exec(command, callback);
  };

  async = require("async");

  queue = async.queue(_exec, 16);

  module.exports.exec = function(command, callback) {
    return queue.push(command, callback);
  };

  module.exports.log = require("./log");

  module.exports.xml = require("./xml");

}).call(this);
